# BEGIN PROBLEM 13
if expressions.rest is nil:
    return scheme_eval(clause.first, env)
else:
    if scheme_truep(scheme_eval(expressions.first,env)):
        return scheme_eval(expressions.first,env)
    else:
        return do_cond_form(expressions.rest,env)

# END PROBLEM 13

;; Problem 16
;; Returns a list of two-element lists
(define (enumerate s)
  ; BEGIN PROBLEM 16
(define n 0)
(if (null? s)
     nil
     (cons
     (cons n (cons (car s) nil))
     (enumerate (cdr s)))
     )
     )
  ; END PROBLEM 16
